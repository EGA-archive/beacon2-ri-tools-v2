version: "3.8"

networks:
  my-app-network:
    external: true

services:

  beacon-ri-tools-v2:
    build:
      context: ./
    container_name: ri-tools
    volumes:
      - ./output_docs:/usr/src/app/output_docs
      - ./conf:/usr/src/app/conf
      - ./files/headers:/files/headers
      - ./files/deref_schemas:/files/deref_schemas
      - ./scripts/datasheet/conf:/usr/src/app/scripts/datasheet/conf
      - ./files/vcf/files_to_read:/usr/src/app/files/vcf/files_to_read
      - ./csv:/usr/src/app/csv
      - ./files/updated_json:/usr/src/app/files/updated_json
    networks:
      - my-app-network

  db:
    container_name: ri-tools-mongo
    image: mongo:5
    command: --wiredTigerCacheSizeGB 4
    hostname: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: beacon
    volumes:
      - ./mongo-init/:/docker-entrypoint-initdb.d/:ro
    networks:
      - my-app-network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    networks:
      - my-app-network

  phenopackets-to-BFF:
    image: ghcr.io/ega-archive/phenopackets-to-bff:latest
    restart: always
    hostname: phenopackets-to-BFF
    container_name: phenopackets-to-BFF
    volumes:
      - ./phenopackets-to-BFF/:/usr/src/app/examples
    networks:
      - my-app-network